version: '3'
services:
  # A service to provision needed resources during development
  # The main task is to upload test cases
  # This is not a production container,
  # but the "boptest_submit" python module that is executed
  # by this service may be useful in provisioning a production environment
  provision: 
    build: provision
    depends_on:
      - web
    environment:
      - BOPTEST_SERVER
      - BOPTEST_DASHBOARD_SERVER
      - BOPTEST_DASHBOARD_API_KEY=${BOPTEST_TEST_PRIVILEGED_KEY}
    volumes:
      - ./:/usr/src/boptest
  web: # main haystack application
    build:
      dockerfile: web/Dockerfile
      context: .
      args:
        - NODE_ENV
    ports:
      - "80:80"
      - "29043:29043"
    environment:
      - NODE_ENV
      - BOPTEST_JOB_QUEUE_URL
      - BOPTEST_INTERNAL_S3_URL
      - BOPTEST_PUBLIC_S3_URL
      - BOPTEST_S3_BUCKET
      - BOPTEST_REDIS_HOST
      - BOPTEST_REGION
      - BOPTEST_TIMEOUT
      - BOPTEST_DASHBOARD_SERVER
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - BOPTEST_USE_TEST_USERS # If "true" the following user accounts will be used for testing
      - BOPTEST_TEST_USERNAME # Only for testing
      - BOPTEST_TEST_KEY # Only for testing
      - BOPTEST_TEST_PRIVILEGED_USERNAME # Only for testing
      - BOPTEST_TEST_PRIVILEGED_KEY # Only for testing
    depends_on:
      - redis
      - goaws
      - worker
      - mc
  # Provides a local queue, conforming to aws Queue API
  goaws:
    image: pafortin/goaws
    ports:
      - "4100:4100"
  # Local implementation of s3
  minio:
    image: minio/minio
    entrypoint:
      - minio
      - server
      - /data
      - --console-address
      - ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
  mc:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/alfalfa;
      /usr/bin/mc anonymous set public myminio/alfalfa;
      /usr/bin/mc policy set download myminio/alfalfa/testcases;
      /usr/bin/mc policy set download myminio/alfalfa/simulated;
      /usr/bin/mc admin user svcacct add --access-key ${AWS_ACCESS_KEY_ID} --secret-key ${AWS_SECRET_ACCESS_KEY} myminio ${MINIO_ROOT_USER};
      "
    depends_on:
      - minio
  worker:
    build:
      dockerfile: worker/Dockerfile
      context: .
    environment:
      - BOPTEST_JOB_QUEUE_URL
      - BOPTEST_LOGLEVEL
      - BOPTEST_INTERNAL_S3_URL
      - BOPTEST_S3_BUCKET
      - BOPTEST_REDIS_HOST
      - BOPTEST_REGION
      - BOPTEST_DASHBOARD_SERVER
      - BOPTEST_DASHBOARD_API_KEY
      - BOPTEST_TIMEOUT
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    depends_on:
      - redis
      - goaws
      - mc
  redis:
    image: redis
    ports:
      - "6379:6379"
  test:
    build:
      dockerfile: test/Dockerfile
      context: .
    depends_on:
      - web
    environment:
      - BOPTEST_SERVER
      - BOPTEST_DASHBOARD_API_KEY
      - BOPTEST_DASHBOARD_USERNAME
      - BOPTEST_TEST_USERNAME
      - BOPTEST_TEST_KEY
      - BOPTEST_TEST_PRIVILEGED_USERNAME
      - BOPTEST_TEST_PRIVILEGED_KEY
      - BOPTEST_USE_TEST_USERS
